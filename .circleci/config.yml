version: 2.1

executors:
  default:
    docker:
      - image: mrps/jekyll

commands:
  install-deps:
    steps:
      - restore_cache:
          keys:
            - -v1-{{ checksum "Gemfile.lock" }}
      - run: bundler install --path vendor/bundle
      - save_cache:
          key: -v1-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

jobs:
  test:
    executor: default
    steps:
      - checkout
      - install-deps
      - run: bundle exec gulp jekyll-build
      - store_artifacts:
          path: _site
          destination: site-source
      - run: |
          FILES=$(find ./_site -type f -name '*.json') && echo "$FILES" && jsonlint $FILES
      - run: htmlproofer ./_site --check-html --disable-external --check-opengraph --check-favicon

  deploy:
    executor: default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - a1:43:bc:29:63:03:ed:86:1f:ea:d0:37:ed:61:25:d4
      - run: |
            echo 'export DIRECTORY="_site"' >> "$BASH_ENV"
            echo 'export BRANCH="gh-pages"' >> "$BASH_ENV"
      - run: |
            echo $DIRECTORY
            echo $BRANCH
      - run: git fetch origin $BRANCH
      - run: rm -rf $DIRECTORY
      - run: git worktree add $DIRECTORY $BRANCH
      - run: |
            git config --global user.email "playingwithpowershell@gmail.com"
            git config --global user.name "MrPowerScripts"
      - install-deps
      - run: bundle exec gulp jekyll-build
      - run: find ./_site/assets/img/posts -name '*.jpg' -execdir mogrify -resize 500x {} \;
      - run: find ./_site/assets/img -type d -exec sh -c 'ls "$0"/*.jpg 2>/dev/null && jpegoptim --size=70k --max=90 --all-progressive --strip-all -t "$0"/*.jpg' {} \;
      - run: |
          cd $DIRECTORY
          git add -A
          git commit -m "[skip ci] Deploy updates" 
          git push origin gh-pages -f
      - run: |
          set -e
          curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE/purge_cache" \
              -H "X-Auth-Email: $CF_EMAIL" \
              -H "X-Auth-Key: $CF_KEY" \
              -H "Content-Type: application/json" \
              --data '{"purge_everything":true}'

workflows:
  test-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
